generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite" // або mysql/sqlite
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(cuid())
  name           String?
  email          String?  @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String? // <-- Ось це
  role           String?  @default("user")
  accounts       Account[]
  sessions       Session[]
  userSubscriptions UserSubscription[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? 
  access_token       String? 
  expires_at         Int?    
  token_type         String? 
  scope              String? 
  id_token           String? 
  session_state      String? 

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Staff {
  id      String   @id @default(cuid())
  name    String
  role    String
  skinUrl String
}

model Subscription {
  id            String    @id @default(cuid())
  name          String
  description   String
  price         Float
  durationDays  Int
  active        Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  userSubscriptions UserSubscription[]
}

model UserSubscription {
  id            String    @id @default(cuid())
  userId        String
  user          User      @relation(fields: [userId], references: [id])
  subscriptionId String
  subscription  Subscription @relation(fields: [subscriptionId], references: [id])
  startDate     DateTime  @default(now())
  endDate       DateTime
  stripePaymentId String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model SiteConfig {
  id          String   @id @default(cuid())
  serverIP    String
  youtubeUrl  String
  description String 
  links       Json     // Stored as JSON array of link objects
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
