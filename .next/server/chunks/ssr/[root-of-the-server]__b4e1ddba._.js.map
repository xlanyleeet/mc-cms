{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///Users/xlanyleeet/Desktop/mc-cms/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\nexport const prisma = globalThis.prisma || new PrismaClient();\n\nif (process.env.NODE_ENV !== \"production\") globalThis.prisma = prisma;\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,SAAS,WAAW,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAE3D,wCAA2C,WAAW,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///Users/xlanyleeet/Desktop/mc-cms/lib/authOptions.ts"],"sourcesContent":["import { PrismaAdapter } from \"@next-auth/prisma-adapter\";\nimport { prisma } from \"@/lib/prisma\";\nimport GoogleProvider from \"next-auth/providers/google\";\nimport DiscordProvider from \"next-auth/providers/discord\";\nimport CredentialsProvider from \"next-auth/providers/credentials\";\nimport type { NextAuthOptions } from \"next-auth\";\nimport bcrypt from \"bcryptjs\";\n\n// Розширимо типи для NextAuth\ndeclare module \"next-auth\" {\n  interface User {\n    role?: string;\n    id: string;\n  }\n  \n  interface Session {\n    user: {\n      id: string;\n      name?: string | null;\n      email?: string | null;\n      image?: string | null;\n      role?: string;\n    };\n  }\n}\n\n// Розширимо JWT типи\ndeclare module \"next-auth/jwt\" {\n  interface JWT {\n    role?: string;\n  }\n}\n\nexport const authOptions: NextAuthOptions = {\n  adapter: PrismaAdapter(prisma),\n  providers: [\n    GoogleProvider({\n      clientId: process.env.GOOGLE_CLIENT_ID!,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET!,\n    }),\n    DiscordProvider({\n      clientId: process.env.DISCORD_CLIENT_ID!,\n      clientSecret: process.env.DISCORD_CLIENT_SECRET!,\n    }),\n    CredentialsProvider({\n      id: \"credentials\",\n      name: \"Credentials\",\n      credentials: {\n        email: { label: \"Email\", type: \"text\" },\n        password: { label: \"Password\", type: \"password\" },\n      },\n      async authorize(credentials) {\n        const { email, password } = credentials ?? {};\n        \n        if (!email || !password) return null;\n        \n        const user = await prisma.user.findUnique({\n          where: { email },\n        });\n        \n        if (!user || !user.hashedPassword) return null;\n        \n        const isValid = await bcrypt.compare(password, user.hashedPassword);\n        \n        if (!isValid) return null;\n        \n        return {\n          id: user.id,\n          name: user.name,\n          email: user.email,\n          role: user.role ?? \"user\",\n        };\n      },\n    }),\n  ],\n  secret: process.env.NEXTAUTH_SECRET,\n  session: {\n    strategy: \"jwt\", // Важливо вказати JWT як стратегію для правильної роботи колбеків\n  },\n  callbacks: {\n    async jwt({ token, user }) {\n      // Передаємо дані користувача в токен\n      if (user) {\n        token.role = user.role ?? \"user\";\n        token.sub = user.id; // Переконаємося, що ID правильно встановлено\n      }\n      return token;\n    },\n    async session({ session, token }) {\n      // Передаємо дані з токена в сесію\n      if (session.user) {\n        session.user.id = token.sub!;\n        session.user.role = token.role ?? \"user\";\n      }\n      return session;\n    },\n  },\n  pages: {\n    signIn: \"/auth/signin\",\n  },\n  debug: process.env.NODE_ENV === \"development\", // Включаємо режим debug для розробки\n};"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AA2BO,MAAM,cAA+B;IAC1C,SAAS,CAAA,GAAA,oKAAA,CAAA,gBAAa,AAAD,EAAE,6GAAA,CAAA,SAAM;IAC7B,WAAW;QACT,CAAA,GAAA,mJAAA,CAAA,UAAc,AAAD,EAAE;YACb,UAAU,QAAQ,GAAG,CAAC,gBAAgB;YACtC,cAAc,QAAQ,GAAG,CAAC,oBAAoB;QAChD;QACA,CAAA,GAAA,oJAAA,CAAA,UAAe,AAAD,EAAE;YACd,UAAU,QAAQ,GAAG,CAAC,iBAAiB;YACvC,cAAc,QAAQ,GAAG,CAAC,qBAAqB;QACjD;QACA,CAAA,GAAA,wJAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,IAAI;YACJ,MAAM;YACN,aAAa;gBACX,OAAO;oBAAE,OAAO;oBAAS,MAAM;gBAAO;gBACtC,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW;gBACzB,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,eAAe,CAAC;gBAE5C,IAAI,CAAC,SAAS,CAAC,UAAU,OAAO;gBAEhC,MAAM,OAAO,MAAM,6GAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;oBACxC,OAAO;wBAAE;oBAAM;gBACjB;gBAEA,IAAI,CAAC,QAAQ,CAAC,KAAK,cAAc,EAAE,OAAO;gBAE1C,MAAM,UAAU,MAAM,iIAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,KAAK,cAAc;gBAElE,IAAI,CAAC,SAAS,OAAO;gBAErB,OAAO;oBACL,IAAI,KAAK,EAAE;oBACX,MAAM,KAAK,IAAI;oBACf,OAAO,KAAK,KAAK;oBACjB,MAAM,KAAK,IAAI,IAAI;gBACrB;YACF;QACF;KACD;IACD,QAAQ,QAAQ,GAAG,CAAC,eAAe;IACnC,SAAS;QACP,UAAU;IACZ;IACA,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,qCAAqC;YACrC,IAAI,MAAM;gBACR,MAAM,IAAI,GAAG,KAAK,IAAI,IAAI;gBAC1B,MAAM,GAAG,GAAG,KAAK,EAAE,EAAE,6CAA6C;YACpE;YACA,OAAO;QACT;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,kCAAkC;YAClC,IAAI,QAAQ,IAAI,EAAE;gBAChB,QAAQ,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG;gBAC3B,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI,IAAI;YACpC;YACA,OAAO;QACT;IACF;IACA,OAAO;QACL,QAAQ;IACV;IACA,OAAO,oDAAyB;AAClC","debugId":null}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file:///Users/xlanyleeet/Desktop/mc-cms/lib/auth.ts"],"sourcesContent":["import { getServerSession } from \"next-auth\";\nimport { authOptions } from \"@/lib/authOptions\";\n\nexport async function requireAdmin() {\n  const session = await getServerSession(authOptions);\n  if (!session || session.user.role !== \"admin\") {\n    throw new Error(\"Unauthorized\");\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe;IACpB,MAAM,UAAU,MAAM,CAAA,GAAA,qIAAA,CAAA,mBAAgB,AAAD,EAAE,kHAAA,CAAA,cAAW;IAClD,IAAI,CAAC,WAAW,QAAQ,IAAI,CAAC,IAAI,KAAK,SAAS;QAC7C,MAAM,IAAI,MAAM;IAClB;AACF","debugId":null}},
    {"offset": {"line": 219, "column": 0}, "map": {"version":3,"sources":["file:///Users/xlanyleeet/Desktop/mc-cms/app/subscriptions/page.tsx"],"sourcesContent":["import { getServerSession } from \"next-auth\";\nimport { authOptions } from \"@/lib/auth\";\nimport { prisma } from \"@/lib/prisma\";\nimport Link from \"next/link\";\nimport { redirect } from \"next/navigation\";\nimport { Stripe } from \"stripe\";\n\n// Ініціалізація Stripe\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY || \"\", {\n  apiVersion: \"2023-10-16\",\n});\n\nexport default async function SubscriptionsPage() {\n  const session = await getServerSession(authOptions);\n  const subscriptions = await prisma.subscription.findMany({\n    where: { active: true },\n    orderBy: { price: \"asc\" },\n  });\n\n  let currentSubscription = null;\n  \n  if (session?.user?.id) {\n    // Отримуємо поточну підписку користувача, якщо є\n    const userSubscription = await prisma.userSubscription.findFirst({\n      where: {\n        userId: session.user.id,\n        endDate: { gt: new Date() }, // Підписка ще не закінчилась\n      },\n      include: {\n        subscription: true,\n      },\n      orderBy: {\n        endDate: \"desc\", // Беремо найновішу підписку\n      },\n    });\n    \n    currentSubscription = userSubscription;\n  }\n\n  async function createCheckoutSession(subscriptionId: string) {\n    \"use server\";\n    \n    const session = await getServerSession(authOptions);\n    \n    if (!session?.user?.id) {\n      return redirect(\"/login?callbackUrl=/subscriptions\");\n    }\n    \n    const subscription = await prisma.subscription.findUnique({\n      where: { id: subscriptionId },\n    });\n    \n    if (!subscription) {\n      throw new Error(\"Підписку не знайдено\");\n    }\n    \n    // Створюємо сесію Stripe Checkout\n    const checkoutSession = await stripe.checkout.sessions.create({\n      payment_method_types: [\"card\"],\n      line_items: [\n        {\n          price_data: {\n            currency: \"uah\",\n            product_data: {\n              name: subscription.name,\n              description: subscription.description,\n            },\n            unit_amount: Math.round(subscription.price * 100), // Ціна у копійках\n          },\n          quantity: 1,\n        },\n      ],\n      mode: \"payment\",\n      success_url: `${process.env.NEXT_PUBLIC_BASE_URL}/subscriptions/success?session_id={CHECKOUT_SESSION_ID}`,\n      cancel_url: `${process.env.NEXT_PUBLIC_BASE_URL}/subscriptions`,\n      client_reference_id: session.user.id,\n      metadata: {\n        subscriptionId: subscription.id,\n        userId: session.user.id,\n        durationDays: subscription.durationDays.toString(),\n      },\n    });\n    \n    if (checkoutSession.url) {\n      redirect(checkoutSession.url);\n    }\n  }\n\n  return (\n    <div className=\"container mx-auto p-6 min-h-screen\">\n      <h1 className=\"text-3xl font-bold mb-8 text-center\">Підписки</h1>\n      \n      {currentSubscription && (\n        <div className=\"mb-12 p-4 bg-green-800 rounded-lg max-w-2xl mx-auto\">\n          <h2 className=\"text-xl font-bold mb-2\">Ваша поточна підписка</h2>\n          <p className=\"text-lg\">{currentSubscription.subscription.name}</p>\n          <p>Дійсна до: {new Date(currentSubscription.endDate).toLocaleDateString()}</p>\n          <p className=\"mt-2 text-sm\">Насолоджуйтесь привілеями вашої підписки на сервері!</p>\n        </div>\n      )}\n      \n      {!session && (\n        <div className=\"mb-8 p-4 bg-yellow-800 rounded-lg max-w-2xl mx-auto\">\n          <p className=\"text-center\">\n            Для придбання підписки необхідно{\" \"}\n            <Link href=\"/login?callbackUrl=/subscriptions\" className=\"text-blue-400 underline\">\n              увійти в аккаунт\n            </Link>\n          </p>\n        </div>\n      )}\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {subscriptions.map((subscription) => (\n          <div key={subscription.id} className=\"border border-gray-700 rounded-lg overflow-hidden bg-zinc-800\">\n            <div className=\"p-6\">\n              <h2 className=\"text-2xl font-bold mb-2\">{subscription.name}</h2>\n              <p className=\"mb-4 text-gray-300\">{subscription.description}</p>\n              <p className=\"text-3xl font-bold mb-2\">{subscription.price} ₴</p>\n              <p className=\"text-sm text-gray-400 mb-6\">на {subscription.durationDays} днів</p>\n              \n              <form action={createCheckoutSession.bind(null, subscription.id)}>\n                <button \n                  type=\"submit\"\n                  className=\"w-full py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition\"\n                  disabled={!session}\n                >\n                  {session ? \"Придбати\" : \"Увійдіть, щоб придбати\"}\n                </button>\n              </form>\n            </div>\n          </div>\n        ))}\n      </div>\n      \n      {subscriptions.length === 0 && (\n        <div className=\"text-center p-8\">\n          <p>На даний момент підписки недоступні. Будь ласка, перевірте пізніше.</p>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 508, "column": 0}, "map": {"version":3,"sources":["file:///Users/xlanyleeet/Desktop/mc-cms/.next-internal/server/app/subscriptions/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {$$RSC_SERVER_ACTION_0 as '407bdb014c758dbdcdce58ac7f116cb58c47383aad'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}}]
}