{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/xlanyleeet/Desktop/mc-cms/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\nexport const prisma = globalThis.prisma || new PrismaClient();\n\nif (process.env.NODE_ENV !== \"production\") globalThis.prisma = prisma;\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,SAAS,WAAW,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAE3D,wCAA2C,WAAW,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///Users/xlanyleeet/Desktop/mc-cms/app/admin/page.tsx"],"sourcesContent":["import { requireAdmin } from \"@/lib/auth\";\nimport { prisma } from \"@/lib/prisma\";\nimport { revalidatePath } from \"next/cache\";\n\nexport default async function AdminPage() {\n  //await requireAdmin();\n  \n  const config = await prisma.siteConfig.findFirst();\n  const staff = await prisma.staff.findMany();\n  const subscriptions = await prisma.subscription.findMany();\n\n  return (\n    <div className=\"container mx-auto p-6 bg-zinc-900 text-white min-h-screen\">\n      <h1 className=\"text-3xl font-bold mb-8\">Admin Panel</h1>\n\n      {/* Site Config Section */}\n      <div className=\"mb-12 bg-zinc-800 p-6 rounded-lg\">\n        <h2 className=\"text-xl font-bold mb-4\">Site Configuration</h2>\n        <form action={async (formData: FormData) => {\n          \"use server\";\n          await prisma.siteConfig.upsert({\n            where: { id: config?.id || \"\" },\n            update: {\n              serverIP: formData.get(\"serverIP\") as string,\n              youtubeUrl: formData.get(\"youtubeUrl\") as string,\n              description: formData.get(\"description\") as string,\n              links: JSON.parse(formData.get(\"links\") as string),\n            },\n            create: {\n              serverIP: formData.get(\"serverIP\") as string,\n              youtubeUrl: formData.get(\"youtubeUrl\") as string,\n              description: formData.get(\"description\") as string,\n              links: JSON.parse(formData.get(\"links\") as string),\n            },\n          });\n          revalidatePath(\"/\");\n        }}>\n          <label className=\"block mb-4\">\n            Description:\n            <textarea\n              name=\"description\"\n              defaultValue={config?.description || \"\"}\n              className=\"w-full p-2 bg-gray-800 text-white rounded mt-1\"\n              rows={3}\n            />\n          </label>\n          <label className=\"block mb-2 mt-4\">\n            YouTube URL:\n            <input\n              type=\"text\"\n              name=\"youtubeUrl\"\n              defaultValue={config?.youtubeUrl || \"\"}\n              className=\"w-full p-2 bg-gray-800 text-white rounded mt-1\"\n            />\n          </label>\n          <label className=\"block mb-2 mt-4\">\n            Server IP:\n            <input\n              type=\"text\"\n              name=\"serverIP\"\n              defaultValue={config?.serverIP || \"\"}\n              className=\"w-full p-2 bg-gray-800 text-white rounded mt-1\"\n            />\n          </label>\n          <label className=\"block mb-4 mt-4\">\n            Links (JSON array):\n            <textarea\n              name=\"links\"\n              defaultValue={JSON.stringify(config?.links || [], null, 2)}\n              className=\"w-full p-2 bg-gray-800 text-white rounded mt-1\"\n              rows={4}\n            />\n          </label>\n          <button\n            type=\"submit\"\n            className=\"bg-green-600 px-4 py-2 rounded hover:bg-green-700\"\n          >\n            Save Changes\n          </button>\n        </form>\n      </div>\n\n      {/* Subscriptions Section */}\n      <div className=\"mb-12 bg-zinc-800 p-6 rounded-lg\">\n        <h2 className=\"text-xl font-bold mb-4\">Subscriptions</h2>\n        <ul className=\"mb-6 space-y-3\">\n          {subscriptions.map((subscription) => (\n            <li key={subscription.id} className=\"bg-zinc-700 p-4 rounded\">\n              <div className=\"flex justify-between\">\n                <div>\n                  <p className=\"font-bold text-lg\">{subscription.name}</p>\n                  <p className=\"text-gray-300\">{subscription.description}</p>\n                  <p className=\"text-sm text-gray-400\">\n                    {subscription.price}₴ / {subscription.durationDays} днів\n                  </p>\n                </div>\n                <div className=\"flex items-start\">\n                  <span className={`px-2 py-1 rounded text-xs ${subscription.active ? 'bg-green-600' : 'bg-red-600'}`}>\n                    {subscription.active ? 'Активна' : 'Неактивна'}\n                  </span>\n                  <form action={async () => {\n                    \"use server\";\n                    await prisma.subscription.update({\n                      where: { id: subscription.id },\n                      data: { active: !subscription.active },\n                    });\n                    revalidatePath(\"/admin\");\n                  }}>\n                    <button className=\"ml-2 px-2 py-1 bg-blue-600 rounded text-xs hover:bg-blue-700\">\n                      {subscription.active ? 'Деактивувати' : 'Активувати'}\n                    </button>\n                  </form>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n\n        <form action={async (formData: FormData) => {\n          \"use server\";\n          await prisma.subscription.create({\n            data: {\n              name: formData.get(\"name\") as string,\n              description: formData.get(\"description\") as string,\n              price: parseFloat(formData.get(\"price\") as string),\n              durationDays: parseInt(formData.get(\"durationDays\") as string),\n              active: true,\n            },\n          });\n          revalidatePath(\"/admin\");\n        }}>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <label className=\"block\">\n              Назва:\n              <input\n                type=\"text\"\n                name=\"name\"\n                className=\"w-full p-2 bg-gray-800 text-white rounded mt-1\"\n                required\n              />\n            </label>\n            <label className=\"block\">\n              Ціна (₴):\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                name=\"price\"\n                className=\"w-full p-2 bg-gray-800 text-white rounded mt-1\"\n                required\n              />\n            </label>\n            <label className=\"block\">\n              Тривалість (днів):\n              <input\n                type=\"number\"\n                name=\"durationDays\"\n                className=\"w-full p-2 bg-gray-800 text-white rounded mt-1\"\n                required\n              />\n            </label>\n            <label className=\"block md:col-span-2\">\n              Опис:\n              <textarea\n                name=\"description\"\n                className=\"w-full p-2 bg-gray-800 text-white rounded mt-1\"\n                rows={2}\n                required\n              />\n            </label>\n          </div>\n          <button\n            type=\"submit\"\n            className=\"mt-4 bg-blue-600 px-4 py-2 rounded hover:bg-blue-700\"\n          >\n            Додати підписку\n          </button>\n        </form>\n      </div>\n\n      {/* Staff Section */}\n      <div className=\"bg-zinc-800 p-6 rounded-lg\">\n        <h2 className=\"text-xl font-bold mb-4\">Staff Members</h2>\n        <ul className=\"mb-6\">\n          {staff.map((member) => (\n            <li key={member.id} className=\"bg-zinc-700 p-4 rounded mb-2\">\n              <p>\n                <strong>{member.name}</strong> — {member.role}\n              </p>\n              <p className=\"text-sm text-gray-400\">{member.skinUrl}</p>\n            </li>\n          ))}\n        </ul>\n\n        <form action={async (formData: FormData) => {\n          \"use server\";\n          await prisma.staff.create({\n            data: {\n              name: formData.get(\"name\") as string,\n              role: formData.get(\"role\") as string,\n              skinUrl: formData.get(\"skinUrl\") as string,\n            },\n          });\n          revalidatePath(\"/admin\");\n        }}>\n          <label className=\"block mb-2\">\n            Name:\n            <input\n              type=\"text\"\n              name=\"name\"\n              className=\"w-full p-2 bg-gray-800 text-white rounded mt-1\"\n            />\n          </label>\n          <label className=\"block mb-2 mt-4\">\n            Role:\n            <input\n              type=\"text\"\n              name=\"role\"\n              className=\"w-full p-2 bg-gray-800 text-white rounded mt-1\"\n            />\n          </label>\n          <label className=\"block mb-4 mt-4\">\n            Skin URL:\n            <input\n              type=\"text\"\n              name=\"skinUrl\"\n              className=\"w-full p-2 bg-gray-800 text-white rounded mt-1\"\n            />\n          </label>\n          <button\n            type=\"submit\"\n            className=\"bg-blue-600 px-4 py-2 rounded hover:bg-blue-700\"\n          >\n            Add Staff\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 594, "column": 0}, "map": {"version":3,"sources":["file:///Users/xlanyleeet/Desktop/mc-cms/.next-internal/server/app/admin/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {$$RSC_SERVER_ACTION_1 as '408ed5dabf5113ae44f920cc3c88a97e0062de7ff6'} from 'ACTIONS_MODULE0'\nexport {$$RSC_SERVER_ACTION_2 as '40a17fa69cabc83d0340121d88e6b4e8938eacbb08'} from 'ACTIONS_MODULE0'\nexport {$$RSC_SERVER_ACTION_3 as '40ded22b08ba2d16b65b95f83bd8e2cd6750c002e5'} from 'ACTIONS_MODULE0'\nexport {$$RSC_SERVER_ACTION_0 as '60013e7ac9ab46446ca0b160909f1a580539119942'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}}]
}